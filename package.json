{
  "name": "js-framework-benchmark",
  "version": "1.0.0",
  "description": "Simple Benchmark for Javascript client side rendering",
  "scripts": {
    "clean": "node cleanup.js",
    "build": "node rebuild-all.js --ci",
    "build-prod": "node rebuild-all.js --ci",
    "compile": "node rebuild-all.js --ci",
    "start": "ws -c lws.config.js --static.maxage 1 -d .",
    "bench": "cd webdriver-ts && cross-env LANG=\"en_US.UTF-8\" node dist/benchmarkRunner.js",
    "results": "cd webdriver-ts && npm run results",
    "bench-all": "cd webdriver-ts && npm run bench && npm run results",
    "selenium": "cd webdriver-ts && npm run bench && npm run results",
    "install-webdriver-ts": "cd webdriver-ts && npm install && npm run build-prod",
    "install-webdriver-ts-results": "cd webdriver-ts-results && npm install",
    "install-local": "npm run install-webdriver-ts && npm run install-webdriver-ts-results",
    "index": "cd webdriver-ts && npm run index",
    "docker-build-image": "docker build -t js-framework-benchmark-ubuntu -f Dockerfile .",
    "docker-start": "cross-env-shell docker run --rm -d -p 8080:8080 --name js-framework-benchmark --volume ${INIT_CWD}:/src --volume js-framework-benchmark:/build js-framework-benchmark-ubuntu",
    "docker-stop": "docker stop js-framework-benchmark",
    "docker-sync": "docker exec -it js-framework-benchmark rsync -avC --exclude /index.html --exclude /framework/**/dist --exclude /webdriver-ts*/dist --exclude node_modules --exclude /webdriver-ts/results*/ /src/ /build/",
    "docker-sync-package-lock-back": "docker exec -it js-framework-benchmark bash sync-package-lock.sh",
    "docker-build-frameworks": "npm run docker-sync && docker exec -it js-framework-benchmark npm install && docker exec -it js-framework-benchmark node rebuild-all.js --ci --docker --",
    "docker-build-frameworks-non-ci": "npm run docker-sync && docker exec -it js-framework-benchmark npm install && docker exec -it js-framework-benchmark node rebuild-all.js --docker --",
    "docker-install-webdriver": "npm run docker-sync && docker exec -it js-framework-benchmark npm run install-local",
    "docker-create-index": "docker exec -it -w /build/webdriver-ts js-framework-benchmark npm run index",
    "docker-rebuild": "docker exec -it js-framework-benchmark cp /src/rebuild-single.js /build/ && docker exec -it js-framework-benchmark node rebuild-single.js --docker",
    "docker-rebuild-ci": "docker exec -it js-framework-benchmark cp /src/rebuild-single.js /build/ && docker exec -it js-framework-benchmark node rebuild-single.js --ci --docker",
    "docker-bench": "docker exec -it -w /build/webdriver-ts js-framework-benchmark node dist/benchmarkRunner.js --headless",
    "docker-results": "docker exec -it -w /build/webdriver-ts js-framework-benchmark npm run results",
    "docker-shell": "docker exec -it js-framework-benchmark /bin/bash",
    "docker-dev-webdriver": "npm run docker-sync && docker exec -it -w /build/webdriver-ts js-framework-benchmark npm run compile && docker exec -it -w /build/webdriver-ts js-framework-benchmark node dist/benchmarkRunner.js --headless",
    "lerna-bootstrap": "lerna bootstrap",
    "lerna-build-all": "lerna run build-prod",
    "docker-lerna-bootstrap": "npm run docker-sync && docker exec -it js-framework-benchmark npm run lerna-bootstrap",
    "docker-lerna-build-all": "npm run docker-sync && docker exec -it js-framework-benchmark npm run lerna-build-all"
  },
  "keywords": [
    "benchmark",
    "javascript",
    "frontend",
    "client",
    "react",
    "angular",
    "mithril"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/krausest/js-framework-benchmark.git"
  },
  "author": "Stefan Krause",
  "license": "ISC",
  "homepage": "https://github.com/krausest/js-framework-benchmark",
  "dependencies": {
    "command-exists": "^1.2.9",
    "cross-env": "^7.0.2",
    "fs-extra": "9.0.0",
    "json5": "^2.2.0",
    "local-web-server": "4.1.0",
    "lodash": "^4.17.15",
    "rimraf": "^3.0.2",
    "yargs": "^15.3.1"
  },
  "devDependencies": {
    "lerna": "^3.22.1"
  }
}
